<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.9</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>tn.esprit.spring</groupId>
	<artifactId>gestion-station-ski</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>gestion-station-ski</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
		<!-- URL du serveur SonarQube -->
		<sonar.host.url>http://192.168.33.10:9000</sonar.host.url>
		<!-- Token SonarQube via une variable d'environnement -->
		<sonar.login>sqa_98d727b8189426de30214f7d123e974e69a8098a</sonar.login>
	</properties>

	<dependencies>
		<!-- Spring Boot Starter Data JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Boot Starter Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot DevTools pour le développement -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- MySQL Connector (si vous utilisez MySQL) -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Lombok pour la gestion des getters/setters et autres -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.34</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>

		<!-- Springdoc OpenAPI UI pour la documentation API -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.12</version>
		</dependency>

		<!-- Spring Boot Starter Test pour les tests unitaires -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Ajout explicite de la dépendance Mockito pour les tests -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.0.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Dépendance pour utiliser JUnit 5 (Jupiter) -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- JUnit 5 Engine -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Plugin SonarQube -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>4.0.0.4121</version>
			</plugin>

			<!-- Spring Boot Maven Plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>9</source>
					<target>9</target>
				</configuration>
			</plugin>

			<!-- Maven Deploy Plugin pour déployer sur Nexus -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Ajout de la configuration de distributionManagement pour le déploiement vers Nexus -->
	<distributionManagement>
		<repository>
			<id>deploymentRepo</id> <!-- ID du serveur de Nexus, à configurer dans settings.xml -->
			<name>Nexus Repository</name>
			<url>http://localhost:8081/repository/maven-releases/</url> <!-- URL du dépôt de releases -->
		</repository>

		<snapshotRepository>
			<id>deploymentRepo</id> <!-- ID du serveur de Nexus pour les versions SNAPSHOT -->
			<name>Nexus Snapshot Repository</name>
			<url>http://localhost:8081/repository/maven-snapshots/</url> <!-- URL du dépôt de snapshots -->
		</snapshotRepository>
	</distributionManagement>
</project>

package tn.esprit.spring.entities;

import java.io.Serializable;
import java.util.Set;

import javax.persistence.*;
import javax.validation.constraints.*;

import com.fasterxml.jackson.annotation.JsonIgnore;
import lombok.*;
import lombok.experimental.FieldDefaults;
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@FieldDefaults(level=AccessLevel.PRIVATE)
@Entity
@Builder
public class Course implements Serializable {

	// Primary key of the Course entity, auto-generated by the database
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	Long numCourse;

	// Course level, cannot be null, must be between 1 and 10
	@NotNull
	@Min(1)
	@Max(10)
	int level;

	// Enum representing the type of course (e.g., COLLECTIVE_CHILDREN, COLLECTIVE_ADULT, etc.)
	@Enumerated(EnumType.STRING)
	TypeCourse typeCourse;

	// Enum representing the support used for the course (e.g., SKI, SNOWBOARD)
	@Enumerated(EnumType.STRING)
	Support support;

	// Course price, cannot be null, must be greater than or equal to 0
	@NotNull
	@Min(0)
	Float price;

	// Time slot for the course, must be at least 1
	@Min(1)
	int timeSlot;

	// Course description, cannot be blank or null
	@NotBlank
	String description;

	// Course location, cannot be blank or null
	@NotBlank
	String location;

	// Set of registrations associated with this course, ignored in JSON serialization
	@JsonIgnore
	@OneToMany(mappedBy = "course", fetch = FetchType.LAZY)  // Lazy loading for related registrations
	private Set<Registration> registrations;  // A course can have many registrations (OneToMany relationship)




}
